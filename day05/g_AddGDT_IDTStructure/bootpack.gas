	.file	"bootpack.c"
	.data
_font_A:
	.byte	0
	.byte	24
	.byte	24
	.byte	24
	.byte	36
	.byte	36
	.byte	36
	.byte	36
	.byte	126
	.byte	66
	.byte	66
	.byte	-25
	.byte	0
	.byte	0
	.space 2
LC0:
	.ascii "what?\0"
LC1:
	.ascii "scrnx = %d\0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	leal	-60(%ebp), %ebx
	subl	$304, %esp
	call	_init_palette
	movl	4088, %edi
	movswl	4086,%eax
	movswl	4084,%esi
	pushl	%eax
	pushl	%esi
	pushl	%edi
	call	_init_screen
	pushl	$LC0
	pushl	$20
	pushl	$20
	pushl	$9
	pushl	%esi
	pushl	%edi
	call	_putfonts8_asc
	addl	$36, %esp
	pushl	$LC0
	pushl	$40
	pushl	$40
	pushl	$9
	pushl	%esi
	pushl	%edi
	call	_putfonts8_asc
	pushl	$LC0
	pushl	$60
	pushl	$60
	pushl	$9
	pushl	%esi
	pushl	%edi
	call	_putfonts8_asc
	addl	$48, %esp
	pushl	%esi
	pushl	$LC1
	pushl	%ebx
	call	_sprintf
	pushl	%ebx
	pushl	$64
	leal	-316(%ebp), %ebx
	pushl	$16
	pushl	$6
	pushl	%esi
	pushl	%edi
	call	_putfonts8_asc
	addl	$36, %esp
	pushl	$0
	pushl	%ebx
	call	_init_mouse_cursor8
	pushl	$16
	pushl	%ebx
	pushl	$100
	pushl	$160
	pushl	$16
	pushl	$16
	pushl	%esi
	pushl	%edi
	call	_putblock8_8
	addl	$40, %esp
L2:
	call	_io_hlt
	jmp	L2
	.balign 2
.globl _init_screen
	.def	_init_screen;	.scl	2;	.type	32;	.endef
_init_screen:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%eax
	pushl	%eax
	movl	16(%ebp), %eax
	subl	$29, %eax
	pushl	%eax
	movl	12(%ebp), %eax
	decl	%eax
	pushl	%eax
	pushl	$0
	pushl	$0
	pushl	$0
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %esi
	subl	$24, %esi
	pushl	%esi
	pushl	$59
	pushl	%esi
	pushl	$3
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %ebx
	addl	$56, %esp
	subl	$4, %ebx
	pushl	%ebx
	pushl	$2
	pushl	%esi
	pushl	$2
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	pushl	%ebx
	pushl	$59
	pushl	%ebx
	pushl	$3
	pushl	$15
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %eax
	addl	$56, %esp
	subl	$5, %eax
	pushl	%eax
	movl	16(%ebp), %eax
	pushl	$59
	subl	$23, %eax
	pushl	%eax
	movl	%eax, -16(%ebp)
	pushl	$59
	pushl	$15
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %edi
	subl	$3, %edi
	pushl	%edi
	pushl	$59
	pushl	%edi
	pushl	$2
	pushl	$0
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	addl	$56, %esp
	pushl	%edi
	pushl	$60
	pushl	%esi
	pushl	$60
	pushl	$0
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	12(%ebp), %ebx
	movl	12(%ebp), %eax
	pushl	%esi
	subl	$4, %eax
	subl	$47, %ebx
	pushl	%eax
	movl	%eax, -20(%ebp)
	pushl	%esi
	pushl	%ebx
	pushl	$15
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	addl	$56, %esp
	pushl	%edi
	pushl	%ebx
	pushl	-16(%ebp)
	pushl	%ebx
	pushl	$15
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	pushl	%edi
	pushl	-20(%ebp)
	pushl	%edi
	pushl	%ebx
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	12(%ebp), %eax
	addl	$56, %esp
	subl	$3, %eax
	pushl	%edi
	pushl	%eax
	pushl	%esi
	pushl	%eax
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	pushl	$_font_A
	pushl	$2
	pushl	$2
	pushl	$6
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont8
	addl	$52, %esp
	pushl	$_font_A
	pushl	$12
	pushl	$12
	pushl	$6
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont8
	pushl	$_font_A
	pushl	$22
	pushl	$22
	pushl	$6
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont8
	addl	$48, %esp
	pushl	$_font_A
	pushl	$32
	pushl	$32
	pushl	$6
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont8
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.data
_table_rgb.0:
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	0
	.byte	-1
	.byte	-1
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	-1
	.byte	0
	.byte	-1
	.byte	0
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-58
	.byte	-58
	.byte	-58
	.byte	-124
	.byte	0
	.byte	0
	.byte	0
	.byte	-124
	.byte	0
	.byte	-124
	.byte	-124
	.byte	0
	.byte	0
	.byte	0
	.byte	-124
	.byte	-124
	.byte	0
	.byte	-124
	.byte	0
	.byte	-124
	.byte	-124
	.byte	-124
	.byte	-124
	.byte	-124
	.text
	.balign 2
.globl _init_palette
	.def	_init_palette;	.scl	2;	.type	32;	.endef
_init_palette:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	$_table_rgb.0
	pushl	$15
	pushl	$0
	call	_set_palette
	leave
	ret
	.balign 2
.globl _set_palette
	.def	_set_palette;	.scl	2;	.type	32;	.endef
_set_palette:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ebx
	movl	8(%ebp), %ebx
	movl	12(%ebp), %edi
	movl	16(%ebp), %esi
	call	_io_load_eflags
	movl	%eax, -16(%ebp)
	call	_io_cli
	pushl	%ebx
	pushl	$968
	call	_io_out8
	cmpl	%edi, %ebx
	popl	%edx
	popl	%ecx
	jle	L12
L14:
	movl	-16(%ebp), %eax
	movl	%eax, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_io_store_eflags
L12:
	movb	(%esi), %al
	incl	%ebx
	shrb	$2, %al
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	movb	1(%esi), %al
	shrb	$2, %al
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	movb	2(%esi), %al
	shrb	$2, %al
	addl	$3, %esi
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	addl	$24, %esp
	cmpl	%edi, %ebx
	jle	L12
	jmp	L14
	.balign 2
.globl _putfonts8_asc
	.def	_putfonts8_asc;	.scl	2;	.type	32;	.endef
_putfonts8_asc:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%esi
	movl	28(%ebp), %ebx
	movb	16(%ebp), %al
	movb	%al, -13(%ebp)
	movl	20(%ebp), %esi
	movl	24(%ebp), %edi
	cmpb	$0, (%ebx)
	jne	L20
L22:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L20:
	movzbl	(%ebx), %eax
	sall	$4, %eax
	incl	%ebx
	addl	$_hankaku, %eax
	pushl	%eax
	pushl	%edi
	pushl	%esi
	addl	$8, %esi
	movsbl	-13(%ebp),%eax
	pushl	%eax
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont8
	addl	$24, %esp
	cmpb	$0, (%ebx)
	jne	L20
	jmp	L22
	.balign 2
.globl _putfont8
	.def	_putfont8;	.scl	2;	.type	32;	.endef
_putfont8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	movl	28(%ebp), %edi
	movb	16(%ebp), %bl
L36:
	movl	24(%ebp), %eax
	movl	20(%ebp), %edx
	addl	%esi, %eax
	imull	12(%ebp), %eax
	addl	8(%ebp), %eax
	leal	(%edx,%eax), %ecx
	movb	(%esi,%edi), %dl
	testb	%dl, %dl
	jns	L28
	movb	%bl, (%ecx)
L28:
	movb	%dl, %al
	andl	$64, %eax
	testb	%al, %al
	je	L29
	movb	%bl, 1(%ecx)
L29:
	movb	%dl, %al
	andl	$32, %eax
	testb	%al, %al
	je	L30
	movb	%bl, 2(%ecx)
L30:
	movb	%dl, %al
	andl	$16, %eax
	testb	%al, %al
	je	L31
	movb	%bl, 3(%ecx)
L31:
	movb	%dl, %al
	andl	$8, %eax
	testb	%al, %al
	je	L32
	movb	%bl, 4(%ecx)
L32:
	movb	%dl, %al
	andl	$4, %eax
	testb	%al, %al
	je	L33
	movb	%bl, 5(%ecx)
L33:
	movb	%dl, %al
	andl	$2, %eax
	testb	%al, %al
	je	L34
	movb	%bl, 6(%ecx)
L34:
	andl	$1, %edx
	testb	%dl, %dl
	je	L26
	movb	%bl, 7(%ecx)
L26:
	incl	%esi
	cmpl	$15, %esi
	jle	L36
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _boxfill8
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
_boxfill8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%eax
	pushl	%eax
	movb	16(%ebp), %al
	movl	24(%ebp), %ecx
	movl	28(%ebp), %edi
	movb	%al, -13(%ebp)
	cmpl	32(%ebp), %ecx
	jg	L51
	movl	12(%ebp), %ebx
	imull	%ecx, %ebx
L49:
	movl	20(%ebp), %edx
	cmpl	%edi, %edx
	jg	L53
	movl	8(%ebp), %esi
	addl	%ebx, %esi
	addl	%edx, %esi
	movl	%esi, -20(%ebp)
L48:
	movl	-20(%ebp), %esi
	movb	-13(%ebp), %al
	incl	%edx
	movb	%al, (%esi)
	incl	%esi
	movl	%esi, -20(%ebp)
	cmpl	%edi, %edx
	jle	L48
L53:
	incl	%ecx
	addl	12(%ebp), %ebx
	cmpl	32(%ebp), %ecx
	jle	L49
L51:
	popl	%edi
	popl	%eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.data
_cursor.1:
	.ascii "**************.."
	.ascii "*OOOOOOOOOOO*..."
	.ascii "*OOOOOOOOOO*...."
	.ascii "*OOOOOOOOO*....."
	.ascii "*OOOOOOOO*......"
	.ascii "*OOOOOOO*......."
	.ascii "*OOOOOOO* ......"
	.ascii "*OOOOOOOO*......"
	.ascii "*OOOO**OOO*....."
	.ascii "*OOO*..*OOO*...."
	.ascii "*OO*....*OOO*..."
	.ascii "*O*......*OOO*.."
	.ascii "**........*OOO*."
	.ascii "*..........*OOO*"
	.ascii "............*OO*"
	.ascii ".............***"
	.text
	.balign 2
.globl _init_mouse_cursor8
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
_init_mouse_cursor8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	xorl	%ebx, %ebx
	pushl	%eax
	movb	12(%ebp), %al
	movl	8(%ebp), %edi
	movb	%al, -13(%ebp)
L67:
	xorl	%ecx, %ecx
L66:
	leal	(%ecx,%ebx), %edx
	cmpb	$42, _cursor.1(%edx)
	je	L72
L63:
	cmpb	$79, _cursor.1(%edx)
	je	L73
L64:
	cmpb	$46, _cursor.1(%edx)
	je	L74
L61:
	incl	%ecx
	cmpl	$15, %ecx
	jle	L66
	incl	%esi
	addl	$16, %ebx
	cmpl	$15, %esi
	jle	L67
	popl	%eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L74:
	leal	(%edi,%ebx), %eax
	movb	-13(%ebp), %dl
	movb	%dl, (%ecx,%eax)
	jmp	L61
L73:
	leal	(%edi,%ebx), %eax
	movb	$6, (%ecx,%eax)
	jmp	L64
L72:
	leal	(%edi,%ebx), %eax
	movb	$12, (%ecx,%eax)
	jmp	L63
	.balign 2
.globl _putblock8_8
	.def	_putblock8_8;	.scl	2;	.type	32;	.endef
_putblock8_8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%edi, %edi
	pushl	%ebx
	cmpl	20(%ebp), %edi
	jge	L87
	movl	32(%ebp), %esi
L85:
	xorl	%ebx, %ebx
	cmpl	16(%ebp), %ebx
	jge	L89
L84:
	movl	28(%ebp), %edx
	leal	(%edx,%edi), %eax
	movl	24(%ebp), %edx
	imull	12(%ebp), %eax
	addl	8(%ebp), %eax
	leal	(%edx,%ebx), %ecx
	movb	(%ebx,%esi), %dl
	incl	%ebx
	movb	%dl, (%ecx,%eax)
	cmpl	16(%ebp), %ebx
	jl	L84
L89:
	incl	%edi
	addl	36(%ebp), %esi
	cmpl	20(%ebp), %edi
	jl	L85
L87:
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.def	_io_store_eflags;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_io_load_eflags;	.scl	2;	.type	32;	.endef
	.def	_set_palette;	.scl	2;	.type	32;	.endef
	.def	_putfont8;	.scl	2;	.type	32;	.endef
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
	.def	_io_hlt;	.scl	2;	.type	32;	.endef
	.def	_putblock8_8;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
	.def	_sprintf;	.scl	2;	.type	32;	.endef
	.def	_putfonts8_asc;	.scl	2;	.type	32;	.endef
	.def	_init_screen;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
