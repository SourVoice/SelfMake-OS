     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_init_gdtidt
     7 00000000                                 	EXTERN	_init_pic
     8 00000000                                 	EXTERN	_io_sti
     9 00000000                                 	EXTERN	_init_palette
    10 00000000                                 	EXTERN	_init_screen
    11 00000000                                 	EXTERN	_init_mouse_cursor8
    12 00000000                                 	EXTERN	_putblock8_8
    13 00000000                                 	EXTERN	_sprintf
    14 00000000                                 	EXTERN	_putfonts8_asc
    15 00000000                                 	EXTERN	_io_out8
    16 00000000                                 	EXTERN	_keyfifo
    17 00000000                                 	EXTERN	_fifo8_init
    18 00000000                                 	EXTERN	_mousefifo
    19 00000000                                 	EXTERN	_io_cli
    20 00000000                                 	EXTERN	_fifo8_status
    21 00000000                                 	EXTERN	_fifo8_get
    22 00000000                                 	EXTERN	_boxfill8
    23 00000000                                 	EXTERN	_io_stihlt
    24 00000000                                 	EXTERN	_io_in8
    25 00000000                                 [FILE "bootpack.c"]
    26                                          [SECTION .data]
    27 00000000                                 LC0:
    28 00000000 73 63 72 6E 78 20 3D 20 25 64   	DB	"scrnx = %d,scrny= %d",0x00
       0000000A 2C 73 63 72 6E 79 3D 20 25 64 
       00000014 00 
    29 00000015                                 LC2:
    30 00000015 5B 6C 63 72 20 25 34 64 20 25   	DB	"[lcr %4d %4d]",0x00
       0000001F 34 64 5D 00 
    31 00000023                                 LC1:
    32 00000023 25 30 32 78 00                  	DB	"%02x",0x00
    33                                          [SECTION .text]
    34 00000000                                 	GLOBAL	_HariMain
    35 00000000                                 _HariMain:
    36 00000000 55                              	PUSH	EBP
    37 00000001 89 E5                           	MOV	EBP,ESP
    38 00000003 57                              	PUSH	EDI
    39 00000004 56                              	PUSH	ESI
    40 00000005 53                              	PUSH	EBX
    41 00000006 8D 9D FFFFFEC4                  	LEA	EBX,DWORD [-316+EBP]
    42 0000000C 81 EC 000001E8                  	SUB	ESP,488
    43 00000012 A1 00000FF8                     	MOV	EAX,DWORD [4088]
    44 00000017 0F BF 35 00000FF6               	MOVSX	ESI,WORD [4086]
    45 0000001E 89 85 FFFFFE10                  	MOV	DWORD [-496+EBP],EAX
    46 00000024 0F BF 3D 00000FF4               	MOVSX	EDI,WORD [4084]
    47 0000002B E8 [00000000]                   	CALL	_init_gdtidt
    48 00000030 E8 [00000000]                   	CALL	_init_pic
    49 00000035 E8 [00000000]                   	CALL	_io_sti
    50 0000003A E8 [00000000]                   	CALL	_init_palette
    51 0000003F 56                              	PUSH	ESI
    52 00000040 57                              	PUSH	EDI
    53 00000041 FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
    54 00000047 E8 [00000000]                   	CALL	_init_screen
    55 0000004C 6A 00                           	PUSH	0
    56 0000004E 53                              	PUSH	EBX
    57 0000004F E8 [00000000]                   	CALL	_init_mouse_cursor8
    58 00000054 89 F0                           	MOV	EAX,ESI
    59 00000056 6A 10                           	PUSH	16
    60 00000058 53                              	PUSH	EBX
    61 00000059 BB 00000002                     	MOV	EBX,2
    62 0000005E 99                              	CDQ
    63 0000005F F7 FB                           	IDIV	EBX
    64 00000061 50                              	PUSH	EAX
    65 00000062 89 F8                           	MOV	EAX,EDI
    66 00000064 99                              	CDQ
    67 00000065 F7 FB                           	IDIV	EBX
    68 00000067 50                              	PUSH	EAX
    69 00000068 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
    70 0000006B 6A 10                           	PUSH	16
    71 0000006D 6A 10                           	PUSH	16
    72 0000006F 57                              	PUSH	EDI
    73 00000070 FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
    74 00000076 E8 [00000000]                   	CALL	_putblock8_8
    75 0000007B 83 C4 34                        	ADD	ESP,52
    76 0000007E 56                              	PUSH	ESI
    77 0000007F 57                              	PUSH	EDI
    78 00000080 68 [00000000]                   	PUSH	LC0
    79 00000085 53                              	PUSH	EBX
    80 00000086 E8 [00000000]                   	CALL	_sprintf
    81 0000008B 53                              	PUSH	EBX
    82 0000008C 6A 00                           	PUSH	0
    83 0000008E 6A 00                           	PUSH	0
    84 00000090 6A 06                           	PUSH	6
    85 00000092 57                              	PUSH	EDI
    86 00000093 FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
    87 00000099 E8 [00000000]                   	CALL	_putfonts8_asc
    88 0000009E 83 C4 28                        	ADD	ESP,40
    89 000000A1 68 000000F9                     	PUSH	249
    90 000000A6 6A 21                           	PUSH	33
    91 000000A8 E8 [00000000]                   	CALL	_io_out8
    92 000000AD 68 000000EF                     	PUSH	239
    93 000000B2 68 000000A1                     	PUSH	161
    94 000000B7 E8 [00000000]                   	CALL	_io_out8
    95 000000BC 8D 85 FFFFFEA4                  	LEA	EAX,DWORD [-348+EBP]
    96 000000C2 50                              	PUSH	EAX
    97 000000C3 6A 20                           	PUSH	32
    98 000000C5 68 [00000000]                   	PUSH	_keyfifo
    99 000000CA E8 [00000000]                   	CALL	_fifo8_init
   100 000000CF E8 00000183                     	CALL	_init_keyboard
   101 000000D4 8D 85 FFFFFE24                  	LEA	EAX,DWORD [-476+EBP]
   102 000000DA 50                              	PUSH	EAX
   103 000000DB 68 00000080                     	PUSH	128
   104 000000E0 68 [00000000]                   	PUSH	_mousefifo
   105 000000E5 E8 [00000000]                   	CALL	_fifo8_init
   106 000000EA 8D 85 FFFFFE14                  	LEA	EAX,DWORD [-492+EBP]
   107 000000F0 83 C4 28                        	ADD	ESP,40
   108 000000F3 50                              	PUSH	EAX
   109 000000F4 E8 0000017F                     	CALL	_enable_mouse
   110 000000F9 58                              	POP	EAX
   111 000000FA                                 L2:
   112 000000FA E8 [00000000]                   	CALL	_io_cli
   113 000000FF 68 [00000000]                   	PUSH	_keyfifo
   114 00000104 E8 [00000000]                   	CALL	_fifo8_status
   115 00000109 68 [00000000]                   	PUSH	_mousefifo
   116 0000010E 89 C3                           	MOV	EBX,EAX
   117 00000110 E8 [00000000]                   	CALL	_fifo8_status
   118 00000115 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
   119 00000118 5B                              	POP	EBX
   120 00000119 5E                              	POP	ESI
   121 0000011A 85 C0                           	TEST	EAX,EAX
   122 0000011C 0F 84 00000117                  	JE	L14
   123 00000122 68 [00000000]                   	PUSH	_keyfifo
   124 00000127 E8 [00000000]                   	CALL	_fifo8_status
   125 0000012C 59                              	POP	ECX
   126 0000012D 85 C0                           	TEST	EAX,EAX
   127 0000012F 0F 85 000000AD                  	JNE	L15
   128 00000135 68 [00000000]                   	PUSH	_mousefifo
   129 0000013A E8 [00000000]                   	CALL	_fifo8_status
   130 0000013F 5A                              	POP	EDX
   131 00000140 85 C0                           	TEST	EAX,EAX
   132 00000142 74 B6                           	JE	L2
   133 00000144 68 [00000000]                   	PUSH	_mousefifo
   134 00000149 E8 [00000000]                   	CALL	_fifo8_get
   135 0000014E 88 C3                           	MOV	BL,AL
   136 00000150 E8 [00000000]                   	CALL	_io_sti
   137 00000155 0F B6 C3                        	MOVZX	EAX,BL
   138 00000158 50                              	PUSH	EAX
   139 00000159 8D 85 FFFFFE14                  	LEA	EAX,DWORD [-492+EBP]
   140 0000015F 50                              	PUSH	EAX
   141 00000160 E8 00000141                     	CALL	_mouse_decode
   142 00000165 83 C4 0C                        	ADD	ESP,12
   143 00000168 85 C0                           	TEST	EAX,EAX
   144 0000016A 74 8E                           	JE	L2
   145 0000016C FF B5 FFFFFE1C                  	PUSH	DWORD [-484+EBP]
   146 00000172 FF B5 FFFFFE18                  	PUSH	DWORD [-488+EBP]
   147 00000178 68 [00000015]                   	PUSH	LC2
   148 0000017D 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   149 00000180 53                              	PUSH	EBX
   150 00000181 E8 [00000000]                   	CALL	_sprintf
   151 00000186 83 C4 10                        	ADD	ESP,16
   152 00000189 8B 85 FFFFFE20                  	MOV	EAX,DWORD [-480+EBP]
   153 0000018F A9 00000001                     	TEST	EAX,1
   154 00000194 74 04                           	JE	L11
   155 00000196 C6 45 C5 4C                     	MOV	BYTE [-59+EBP],76
   156 0000019A                                 L11:
   157 0000019A A9 00000002                     	TEST	EAX,2
   158 0000019F 74 04                           	JE	L12
   159 000001A1 C6 45 C7 52                     	MOV	BYTE [-57+EBP],82
   160 000001A5                                 L12:
   161 000001A5 83 E0 04                        	AND	EAX,4
   162 000001A8 74 04                           	JE	L13
   163 000001AA C6 45 C6 43                     	MOV	BYTE [-58+EBP],67
   164 000001AE                                 L13:
   165 000001AE 6A 1F                           	PUSH	31
   166 000001B0 68 00000097                     	PUSH	151
   167 000001B5 6A 10                           	PUSH	16
   168 000001B7 6A 20                           	PUSH	32
   169 000001B9 6A 0E                           	PUSH	14
   170 000001BB 57                              	PUSH	EDI
   171 000001BC FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
   172 000001C2 E8 [00000000]                   	CALL	_boxfill8
   173 000001C7 53                              	PUSH	EBX
   174 000001C8 6A 10                           	PUSH	16
   175 000001CA 6A 20                           	PUSH	32
   176 000001CC 6A 07                           	PUSH	7
   177 000001CE 57                              	PUSH	EDI
   178 000001CF FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
   179 000001D5 E8 [00000000]                   	CALL	_putfonts8_asc
   180 000001DA 83 C4 34                        	ADD	ESP,52
   181 000001DD E9 FFFFFF18                     	JMP	L2
   182 000001E2                                 L15:
   183 000001E2 68 [00000000]                   	PUSH	_keyfifo
   184 000001E7 E8 [00000000]                   	CALL	_fifo8_get
   185 000001EC 88 C3                           	MOV	BL,AL
   186 000001EE E8 [00000000]                   	CALL	_io_sti
   187 000001F3 0F B6 C3                        	MOVZX	EAX,BL
   188 000001F6 50                              	PUSH	EAX
   189 000001F7 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   190 000001FA 68 [00000023]                   	PUSH	LC1
   191 000001FF 53                              	PUSH	EBX
   192 00000200 E8 [00000000]                   	CALL	_sprintf
   193 00000205 6A 1F                           	PUSH	31
   194 00000207 6A 0F                           	PUSH	15
   195 00000209 6A 10                           	PUSH	16
   196 0000020B 6A 00                           	PUSH	0
   197 0000020D 6A 0E                           	PUSH	14
   198 0000020F 57                              	PUSH	EDI
   199 00000210 FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
   200 00000216 E8 [00000000]                   	CALL	_boxfill8
   201 0000021B 83 C4 2C                        	ADD	ESP,44
   202 0000021E 53                              	PUSH	EBX
   203 0000021F 6A 10                           	PUSH	16
   204 00000221 6A 00                           	PUSH	0
   205 00000223 6A 07                           	PUSH	7
   206 00000225 57                              	PUSH	EDI
   207 00000226 FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
   208 0000022C E8 [00000000]                   	CALL	_putfonts8_asc
   209 00000231 83 C4 18                        	ADD	ESP,24
   210 00000234 E9 FFFFFEC1                     	JMP	L2
   211 00000239                                 L14:
   212 00000239 E8 [00000000]                   	CALL	_io_stihlt
   213 0000023E E9 FFFFFEB7                     	JMP	L2
   214 00000243                                 	GLOBAL	_wait_KBC_sendready
   215 00000243                                 _wait_KBC_sendready:
   216 00000243 55                              	PUSH	EBP
   217 00000244 89 E5                           	MOV	EBP,ESP
   218 00000246                                 L17:
   219 00000246 6A 64                           	PUSH	100
   220 00000248 E8 [00000000]                   	CALL	_io_in8
   221 0000024D 5A                              	POP	EDX
   222 0000024E 83 E0 02                        	AND	EAX,2
   223 00000251 84 C0                           	TEST	AL,AL
   224 00000253 75 F1                           	JNE	L17
   225 00000255 C9                              	LEAVE
   226 00000256 C3                              	RET
   227 00000257                                 	GLOBAL	_init_keyboard
   228 00000257                                 _init_keyboard:
   229 00000257 55                              	PUSH	EBP
   230 00000258 89 E5                           	MOV	EBP,ESP
   231 0000025A E8 FFFFFFE4                     	CALL	_wait_KBC_sendready
   232 0000025F 6A 60                           	PUSH	96
   233 00000261 6A 64                           	PUSH	100
   234 00000263 E8 [00000000]                   	CALL	_io_out8
   235 00000268 E8 FFFFFFD6                     	CALL	_wait_KBC_sendready
   236 0000026D 6A 47                           	PUSH	71
   237 0000026F 6A 60                           	PUSH	96
   238 00000271 E8 [00000000]                   	CALL	_io_out8
   239 00000276 C9                              	LEAVE
   240 00000277 C3                              	RET
   241 00000278                                 	GLOBAL	_enable_mouse
   242 00000278                                 _enable_mouse:
   243 00000278 55                              	PUSH	EBP
   244 00000279 89 E5                           	MOV	EBP,ESP
   245 0000027B E8 FFFFFFC3                     	CALL	_wait_KBC_sendready
   246 00000280 68 000000D4                     	PUSH	212
   247 00000285 6A 64                           	PUSH	100
   248 00000287 E8 [00000000]                   	CALL	_io_out8
   249 0000028C E8 FFFFFFB2                     	CALL	_wait_KBC_sendready
   250 00000291 68 000000F4                     	PUSH	244
   251 00000296 6A 60                           	PUSH	96
   252 00000298 E8 [00000000]                   	CALL	_io_out8
   253 0000029D 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   254 000002A0 C6 40 03 00                     	MOV	BYTE [3+EAX],0
   255 000002A4 C9                              	LEAVE
   256 000002A5 C3                              	RET
   257 000002A6                                 	GLOBAL	_mouse_decode
   258 000002A6                                 _mouse_decode:
   259 000002A6 55                              	PUSH	EBP
   260 000002A7 89 E5                           	MOV	EBP,ESP
   261 000002A9 56                              	PUSH	ESI
   262 000002AA 53                              	PUSH	EBX
   263 000002AB 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
   264 000002AE 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
   265 000002B1 89 CE                           	MOV	ESI,ECX
   266 000002B3 8A 42 03                        	MOV	AL,BYTE [3+EDX]
   267 000002B6 84 C0                           	TEST	AL,AL
   268 000002B8 75 11                           	JNE	L24
   269 000002BA 80 F9 FA                        	CMP	CL,-6
   270 000002BD 74 06                           	JE	L33
   271 000002BF                                 L32:
   272 000002BF 31 C0                           	XOR	EAX,EAX
   273 000002C1                                 L23:
   274 000002C1 5B                              	POP	EBX
   275 000002C2 5E                              	POP	ESI
   276 000002C3 5D                              	POP	EBP
   277 000002C4 C3                              	RET
   278 000002C5                                 L33:
   279 000002C5 C6 42 03 01                     	MOV	BYTE [3+EDX],1
   280 000002C9 EB F4                           	JMP	L32
   281 000002CB                                 L24:
   282 000002CB 3C 01                           	CMP	AL,1
   283 000002CD 74 61                           	JE	L34
   284 000002CF 3C 02                           	CMP	AL,2
   285 000002D1 74 54                           	JE	L35
   286 000002D3 3C 03                           	CMP	AL,3
   287 000002D5 74 05                           	JE	L36
   288 000002D7 83 C8 FF                        	OR	EAX,-1
   289 000002DA EB E5                           	JMP	L23
   290 000002DC                                 L36:
   291 000002DC 8A 1A                           	MOV	BL,BYTE [EDX]
   292 000002DE 81 E6 000000FF                  	AND	ESI,255
   293 000002E4 89 D8                           	MOV	EAX,EBX
   294 000002E6 88 4A 02                        	MOV	BYTE [2+EDX],CL
   295 000002E9 83 E0 07                        	AND	EAX,7
   296 000002EC 89 72 08                        	MOV	DWORD [8+EDX],ESI
   297 000002EF 89 42 0C                        	MOV	DWORD [12+EDX],EAX
   298 000002F2 88 D8                           	MOV	AL,BL
   299 000002F4 0F B6 4A 01                     	MOVZX	ECX,BYTE [1+EDX]
   300 000002F8 83 E0 10                        	AND	EAX,16
   301 000002FB 89 4A 04                        	MOV	DWORD [4+EDX],ECX
   302 000002FE C6 42 03 01                     	MOV	BYTE [3+EDX],1
   303 00000302 84 C0                           	TEST	AL,AL
   304 00000304 74 09                           	JE	L30
   305 00000306 81 C9 FFFFFF00                  	OR	ECX,-256
   306 0000030C 89 4A 04                        	MOV	DWORD [4+EDX],ECX
   307 0000030F                                 L30:
   308 0000030F 83 E3 20                        	AND	EBX,32
   309 00000312 84 DB                           	TEST	BL,BL
   310 00000314 74 07                           	JE	L31
   311 00000316 81 4A 08 FFFFFF00               	OR	DWORD [8+EDX],-256
   312 0000031D                                 L31:
   313 0000031D F7 5A 08                        	NEG	DWORD [8+EDX]
   314 00000320 B8 00000001                     	MOV	EAX,1
   315 00000325 EB 9A                           	JMP	L23
   316 00000327                                 L35:
   317 00000327 88 4A 01                        	MOV	BYTE [1+EDX],CL
   318 0000032A C6 42 03 03                     	MOV	BYTE [3+EDX],3
   319 0000032E EB 8F                           	JMP	L32
   320 00000330                                 L34:
   321 00000330 83 E6 C8                        	AND	ESI,-56
   322 00000333 89 F0                           	MOV	EAX,ESI
   323 00000335 3C 08                           	CMP	AL,8
   324 00000337 75 86                           	JNE	L32
   325 00000339 88 0A                           	MOV	BYTE [EDX],CL
   326 0000033B C6 42 03 02                     	MOV	BYTE [3+EDX],2
   327 0000033F E9 FFFFFF7B                     	JMP	L32
