     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_init_gdtidt
     7 00000000                                 	EXTERN	_init_pic
     8 00000000                                 	EXTERN	_io_sti
     9 00000000                                 	EXTERN	_init_palette
    10 00000000                                 	EXTERN	_init_screen
    11 00000000                                 	EXTERN	_init_mouse_cursor8
    12 00000000                                 	EXTERN	_putblock8_8
    13 00000000                                 	EXTERN	_sprintf
    14 00000000                                 	EXTERN	_putfonts8_asc
    15 00000000                                 	EXTERN	_io_out8
    16 00000000                                 	EXTERN	_keyfifo
    17 00000000                                 	EXTERN	_fifo8_init
    18 00000000                                 	EXTERN	_mousefifo
    19 00000000                                 	EXTERN	_io_cli
    20 00000000                                 	EXTERN	_fifo8_status
    21 00000000                                 	EXTERN	_fifo8_get
    22 00000000                                 	EXTERN	_boxfill8
    23 00000000                                 	EXTERN	_io_stihlt
    24 00000000                                 	EXTERN	_io_in8
    25 00000000                                 [FILE "bootpack.c"]
    26                                          [SECTION .data]
    27 00000000                                 LC0:
    28 00000000 73 63 72 6E 78 20 3D 20 25 64   	DB	"scrnx = %d,scrny= %d",0x00
       0000000A 2C 73 63 72 6E 79 3D 20 25 64 
       00000014 00 
    29 00000015                                 LC2:
    30 00000015 25 30 32 78 2C 25 30 32 78 2C   	DB	"%02x,%02x,%02x",0x00
       0000001F 25 30 32 78 00 
    31 00000024                                 LC1:
    32 00000024 25 30 32 78 00                  	DB	"%02x",0x00
    33                                          [SECTION .text]
    34 00000000                                 	GLOBAL	_HariMain
    35 00000000                                 _HariMain:
    36 00000000 55                              	PUSH	EBP
    37 00000001 89 E5                           	MOV	EBP,ESP
    38 00000003 57                              	PUSH	EDI
    39 00000004 56                              	PUSH	ESI
    40 00000005 53                              	PUSH	EBX
    41 00000006 8D 9D FFFFFEC4                  	LEA	EBX,DWORD [-316+EBP]
    42 0000000C 81 EC 000001EC                  	SUB	ESP,492
    43 00000012 A1 00000FF8                     	MOV	EAX,DWORD [4088]
    44 00000017 0F BF 35 00000FF6               	MOVSX	ESI,WORD [4086]
    45 0000001E 89 85 FFFFFE10                  	MOV	DWORD [-496+EBP],EAX
    46 00000024 0F BF 3D 00000FF4               	MOVSX	EDI,WORD [4084]
    47 0000002B E8 [00000000]                   	CALL	_init_gdtidt
    48 00000030 E8 [00000000]                   	CALL	_init_pic
    49 00000035 E8 [00000000]                   	CALL	_io_sti
    50 0000003A E8 [00000000]                   	CALL	_init_palette
    51 0000003F 56                              	PUSH	ESI
    52 00000040 57                              	PUSH	EDI
    53 00000041 FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
    54 00000047 E8 [00000000]                   	CALL	_init_screen
    55 0000004C 6A 00                           	PUSH	0
    56 0000004E 53                              	PUSH	EBX
    57 0000004F E8 [00000000]                   	CALL	_init_mouse_cursor8
    58 00000054 89 F0                           	MOV	EAX,ESI
    59 00000056 6A 10                           	PUSH	16
    60 00000058 53                              	PUSH	EBX
    61 00000059 BB 00000002                     	MOV	EBX,2
    62 0000005E 99                              	CDQ
    63 0000005F F7 FB                           	IDIV	EBX
    64 00000061 50                              	PUSH	EAX
    65 00000062 89 F8                           	MOV	EAX,EDI
    66 00000064 99                              	CDQ
    67 00000065 F7 FB                           	IDIV	EBX
    68 00000067 50                              	PUSH	EAX
    69 00000068 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
    70 0000006B 6A 10                           	PUSH	16
    71 0000006D 6A 10                           	PUSH	16
    72 0000006F 57                              	PUSH	EDI
    73 00000070 FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
    74 00000076 E8 [00000000]                   	CALL	_putblock8_8
    75 0000007B 83 C4 34                        	ADD	ESP,52
    76 0000007E 56                              	PUSH	ESI
    77 0000007F 57                              	PUSH	EDI
    78 00000080 68 [00000000]                   	PUSH	LC0
    79 00000085 53                              	PUSH	EBX
    80 00000086 E8 [00000000]                   	CALL	_sprintf
    81 0000008B 53                              	PUSH	EBX
    82 0000008C 6A 00                           	PUSH	0
    83 0000008E 6A 00                           	PUSH	0
    84 00000090 6A 06                           	PUSH	6
    85 00000092 57                              	PUSH	EDI
    86 00000093 FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
    87 00000099 E8 [00000000]                   	CALL	_putfonts8_asc
    88 0000009E 83 C4 28                        	ADD	ESP,40
    89 000000A1 68 000000F9                     	PUSH	249
    90 000000A6 6A 21                           	PUSH	33
    91 000000A8 E8 [00000000]                   	CALL	_io_out8
    92 000000AD 68 000000EF                     	PUSH	239
    93 000000B2 68 000000A1                     	PUSH	161
    94 000000B7 E8 [00000000]                   	CALL	_io_out8
    95 000000BC 8D 85 FFFFFEA4                  	LEA	EAX,DWORD [-348+EBP]
    96 000000C2 50                              	PUSH	EAX
    97 000000C3 6A 20                           	PUSH	32
    98 000000C5 68 [00000000]                   	PUSH	_keyfifo
    99 000000CA E8 [00000000]                   	CALL	_fifo8_init
   100 000000CF E8 000001B3                     	CALL	_init_keyboard
   101 000000D4 8D 85 FFFFFE24                  	LEA	EAX,DWORD [-476+EBP]
   102 000000DA 50                              	PUSH	EAX
   103 000000DB 68 00000080                     	PUSH	128
   104 000000E0 68 [00000000]                   	PUSH	_mousefifo
   105 000000E5 E8 [00000000]                   	CALL	_fifo8_init
   106 000000EA 83 C4 28                        	ADD	ESP,40
   107 000000ED E8 000001B6                     	CALL	_enable_mouse
   108 000000F2 C6 85 FFFFFE0B 00               	MOV	BYTE [-501+EBP],0
   109 000000F9                                 L2:
   110 000000F9 E8 [00000000]                   	CALL	_io_cli
   111 000000FE 68 [00000000]                   	PUSH	_keyfifo
   112 00000103 E8 [00000000]                   	CALL	_fifo8_status
   113 00000108 68 [00000000]                   	PUSH	_mousefifo
   114 0000010D 89 C3                           	MOV	EBX,EAX
   115 0000010F E8 [00000000]                   	CALL	_fifo8_status
   116 00000114 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
   117 00000117 5B                              	POP	EBX
   118 00000118 5E                              	POP	ESI
   119 00000119 85 C0                           	TEST	EAX,EAX
   120 0000011B 0F 84 00000148                  	JE	L19
   121 00000121 68 [00000000]                   	PUSH	_keyfifo
   122 00000126 E8 [00000000]                   	CALL	_fifo8_status
   123 0000012B 59                              	POP	ECX
   124 0000012C 85 C0                           	TEST	EAX,EAX
   125 0000012E 0F 85 000000ED                  	JNE	L20
   126 00000134 68 [00000000]                   	PUSH	_mousefifo
   127 00000139 E8 [00000000]                   	CALL	_fifo8_status
   128 0000013E 5A                              	POP	EDX
   129 0000013F 85 C0                           	TEST	EAX,EAX
   130 00000141 74 B6                           	JE	L2
   131 00000143 68 [00000000]                   	PUSH	_mousefifo
   132 00000148 E8 [00000000]                   	CALL	_fifo8_get
   133 0000014D 89 C3                           	MOV	EBX,EAX
   134 0000014F E8 [00000000]                   	CALL	_io_sti
   135 00000154 58                              	POP	EAX
   136 00000155 80 BD FFFFFE0B 00               	CMP	BYTE [-501+EBP],0
   137 0000015C 0F 84 000000AA                  	JE	L21
   138 00000162 80 BD FFFFFE0B 01               	CMP	BYTE [-501+EBP],1
   139 00000169 0F 84 0000008B                  	JE	L22
   140 0000016F 80 BD FFFFFE0B 02               	CMP	BYTE [-501+EBP],2
   141 00000176 74 70                           	JE	L23
   142 00000178 80 BD FFFFFE0B 03               	CMP	BYTE [-501+EBP],3
   143 0000017F 0F 85 FFFFFF74                  	JNE	L2
   144 00000185 0F B6 C3                        	MOVZX	EAX,BL
   145 00000188 50                              	PUSH	EAX
   146 00000189 88 9D FFFFFE16                  	MOV	BYTE [-490+EBP],BL
   147 0000018F 0F B6 85 FFFFFE15               	MOVZX	EAX,BYTE [-491+EBP]
   148 00000196 50                              	PUSH	EAX
   149 00000197 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   150 0000019A 0F B6 85 FFFFFE14               	MOVZX	EAX,BYTE [-492+EBP]
   151 000001A1 50                              	PUSH	EAX
   152 000001A2 68 [00000015]                   	PUSH	LC2
   153 000001A7 53                              	PUSH	EBX
   154 000001A8 C6 85 FFFFFE0B 01               	MOV	BYTE [-501+EBP],1
   155 000001AF E8 [00000000]                   	CALL	_sprintf
   156 000001B4 6A 1F                           	PUSH	31
   157 000001B6 6A 60                           	PUSH	96
   158 000001B8 6A 10                           	PUSH	16
   159 000001BA 6A 20                           	PUSH	32
   160 000001BC 6A 0E                           	PUSH	14
   161 000001BE 57                              	PUSH	EDI
   162 000001BF FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
   163 000001C5 E8 [00000000]                   	CALL	_boxfill8
   164 000001CA 83 C4 30                        	ADD	ESP,48
   165 000001CD 53                              	PUSH	EBX
   166 000001CE 6A 10                           	PUSH	16
   167 000001D0 6A 20                           	PUSH	32
   168 000001D2                                 L18:
   169 000001D2 6A 07                           	PUSH	7
   170 000001D4 57                              	PUSH	EDI
   171 000001D5 FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
   172 000001DB E8 [00000000]                   	CALL	_putfonts8_asc
   173 000001E0 83 C4 18                        	ADD	ESP,24
   174 000001E3 E9 FFFFFF11                     	JMP	L2
   175 000001E8                                 L23:
   176 000001E8 88 9D FFFFFE15                  	MOV	BYTE [-491+EBP],BL
   177 000001EE C6 85 FFFFFE0B 03               	MOV	BYTE [-501+EBP],3
   178 000001F5 E9 FFFFFEFF                     	JMP	L2
   179 000001FA                                 L22:
   180 000001FA 88 9D FFFFFE14                  	MOV	BYTE [-492+EBP],BL
   181 00000200 C6 85 FFFFFE0B 02               	MOV	BYTE [-501+EBP],2
   182 00000207 E9 FFFFFEED                     	JMP	L2
   183 0000020C                                 L21:
   184 0000020C 80 FB FA                        	CMP	BL,-6
   185 0000020F 0F 85 FFFFFEE4                  	JNE	L2
   186 00000215 C6 85 FFFFFE0B 01               	MOV	BYTE [-501+EBP],1
   187 0000021C E9 FFFFFED8                     	JMP	L2
   188 00000221                                 L20:
   189 00000221 68 [00000000]                   	PUSH	_keyfifo
   190 00000226 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   191 00000229 E8 [00000000]                   	CALL	_fifo8_get
   192 0000022E 89 C6                           	MOV	ESI,EAX
   193 00000230 E8 [00000000]                   	CALL	_io_sti
   194 00000235 89 F2                           	MOV	EDX,ESI
   195 00000237 0F B6 C2                        	MOVZX	EAX,DL
   196 0000023A 50                              	PUSH	EAX
   197 0000023B 68 [00000024]                   	PUSH	LC1
   198 00000240 53                              	PUSH	EBX
   199 00000241 E8 [00000000]                   	CALL	_sprintf
   200 00000246 6A 1F                           	PUSH	31
   201 00000248 6A 0F                           	PUSH	15
   202 0000024A 6A 10                           	PUSH	16
   203 0000024C 6A 00                           	PUSH	0
   204 0000024E 6A 0E                           	PUSH	14
   205 00000250 57                              	PUSH	EDI
   206 00000251 FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
   207 00000257 E8 [00000000]                   	CALL	_boxfill8
   208 0000025C 83 C4 2C                        	ADD	ESP,44
   209 0000025F 53                              	PUSH	EBX
   210 00000260 6A 10                           	PUSH	16
   211 00000262 6A 00                           	PUSH	0
   212 00000264 E9 FFFFFF69                     	JMP	L18
   213 00000269                                 L19:
   214 00000269 E8 [00000000]                   	CALL	_io_stihlt
   215 0000026E E9 FFFFFE86                     	JMP	L2
   216 00000273                                 	GLOBAL	_wait_KBC_sendready
   217 00000273                                 _wait_KBC_sendready:
   218 00000273 55                              	PUSH	EBP
   219 00000274 89 E5                           	MOV	EBP,ESP
   220 00000276                                 L25:
   221 00000276 6A 64                           	PUSH	100
   222 00000278 E8 [00000000]                   	CALL	_io_in8
   223 0000027D 5A                              	POP	EDX
   224 0000027E 83 E0 02                        	AND	EAX,2
   225 00000281 84 C0                           	TEST	AL,AL
   226 00000283 75 F1                           	JNE	L25
   227 00000285 C9                              	LEAVE
   228 00000286 C3                              	RET
   229 00000287                                 	GLOBAL	_init_keyboard
   230 00000287                                 _init_keyboard:
   231 00000287 55                              	PUSH	EBP
   232 00000288 89 E5                           	MOV	EBP,ESP
   233 0000028A E8 FFFFFFE4                     	CALL	_wait_KBC_sendready
   234 0000028F 6A 60                           	PUSH	96
   235 00000291 6A 64                           	PUSH	100
   236 00000293 E8 [00000000]                   	CALL	_io_out8
   237 00000298 E8 FFFFFFD6                     	CALL	_wait_KBC_sendready
   238 0000029D 6A 47                           	PUSH	71
   239 0000029F 6A 60                           	PUSH	96
   240 000002A1 E8 [00000000]                   	CALL	_io_out8
   241 000002A6 C9                              	LEAVE
   242 000002A7 C3                              	RET
   243 000002A8                                 	GLOBAL	_enable_mouse
   244 000002A8                                 _enable_mouse:
   245 000002A8 55                              	PUSH	EBP
   246 000002A9 89 E5                           	MOV	EBP,ESP
   247 000002AB E8 FFFFFFC3                     	CALL	_wait_KBC_sendready
   248 000002B0 68 000000D4                     	PUSH	212
   249 000002B5 6A 64                           	PUSH	100
   250 000002B7 E8 [00000000]                   	CALL	_io_out8
   251 000002BC E8 FFFFFFB2                     	CALL	_wait_KBC_sendready
   252 000002C1 68 000000F4                     	PUSH	244
   253 000002C6 6A 60                           	PUSH	96
   254 000002C8 E8 [00000000]                   	CALL	_io_out8
   255 000002CD C9                              	LEAVE
   256 000002CE C3                              	RET
