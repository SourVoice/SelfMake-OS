     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [BITS 32]
     4 00000000                                 [FILE "a_nask.nas"]
     5 00000000                                         GLOBAL  _api_putchar
     6 00000000                                         GLOBAL  _api_end
     7 00000000                                         GLOBAL  _api_putstr0
     8 00000000                                         GLOBAL  _api_openwin        
     9 00000000                                         GLOBAL  _api_putstrwin
    10 00000000                                         GLOBAL  _api_boxfillwin
    11 00000000                                         GLOBAL  _api_initmalloc
    12 00000000                                         GLOBAL  _api_malloc
    13 00000000                                         GLOBAL  _api_free
    14 00000000                                         GLOBAL  _api_point
    15 00000000                                         GLOBAL  _api_linewin
    16 00000000                                         GLOBAL  _api_getkey
    17 00000000                                         GLOBAL  _api_refreshwin
    18 00000000                                         GLOBAL  _api_closewin
    19 00000000                                         GLOBAL  _api_alloctimer
    20 00000000                                         GLOBAL  _api_inittimer
    21 00000000                                         GLOBAL  _api_settimer
    22 00000000                                         GLOBAL  _api_freetimer
    23                                          [SECTION .text]
    24 00000000                                 
    25 00000000                                 _api_putchar:
    26 00000000 BA 00000001                             MOV     EDX,1
    27 00000005 8A 44 24 04                             MOV     AL,[ESP+4]
    28 00000009 CD 40                                   INT     0x40
    29 0000000B C3                                      RET
    30 0000000C                                 
    31 0000000C                                 _api_putstr0:
    32 0000000C 53                                      PUSH    EBX
    33 0000000D BA 00000002                             MOV     EDX,2
    34 00000012 8B 5C 24 08                             MOV     EBX,[ESP+8]
    35 00000016 CD 40                                   INT     0x40
    36 00000018 5B                                      POP     EBX
    37 00000019 C3                                      RET
    38 0000001A                                 
    39 0000001A                                 _api_end:
    40 0000001A BA 00000004                             MOV     EDX,4
    41 0000001F CD 40                                   INT     0x40
    42 00000021                                 
    43 00000021                                 _api_openwin:
    44 00000021 57                                      PUSH    EDI
    45 00000022 56                                      PUSH    ESI
    46 00000023 53                                      PUSH    EBX
    47 00000024 BA 00000005                             MOV     EDX,5
    48 00000029 8B 5C 24 10                             MOV     EBX,[ESP+16]    ;buf
    49 0000002D 8B 74 24 14                             MOV     ESI,[ESP+20]    ;xsize               
    50 00000031 8B 7C 24 18                             MOV     EDI,[ESP+24]    ;ysize                
    51 00000035 8B 44 24 1C                             MOV     EAX,[ESP+28]    ;col_inv
    52 00000039 8B 4C 24 20                             MOV     ECX,[ESP+32]    ;title             
    53 0000003D CD 40                                   INT     0x40
    54 0000003F 5B                                      POP     EBX
    55 00000040 5E                                      POP     ESI
    56 00000041 5F                                      POP     EDI
    57 00000042 C3                                      RET
    58 00000043                                         
    59 00000043                                 _api_putstrwin:                 ;void api_putstrwin(int win, int x, int y, int col, int len, char* str)
    60 00000043 57                                      PUSh    EDI
    61 00000044 56                                      PUSH    ESI
    62 00000045 55                                      PUSH    EBP
    63 00000046 53                                      PUSH    EBX
    64 00000047 BA 00000006                             MOV	EDX,6
    65 0000004C 8B 5C 24 14                             MOV	EBX,[ESP+20]	; win
    66 00000050 8B 74 24 18                             MOV	ESI,[ESP+24]	; x
    67 00000054 8B 7C 24 1C                             MOV	EDI,[ESP+28]	; y
    68 00000058 8B 44 24 20                             MOV	EAX,[ESP+32]	; col
    69 0000005C 8B 4C 24 24                             MOV	ECX,[ESP+36]	; len
    70 00000060 8B 6C 24 28                             MOV	EBP,[ESP+40]	; str
    71 00000064 CD 40                                   INT	0x40
    72 00000066 5B                                      POP	EBX
    73 00000067 5D                                      POP	EBP
    74 00000068 5E                                      POP	ESI
    75 00000069 5F                                      POP	EDI
    76 0000006A C3                                      RET
    77 0000006B                                 
    78 0000006B                                 _api_boxfillwin:        ; void api_boxfilwin(int win, int x0, int y0, int x1, int y1, int col);
    79 0000006B 57                                      PUSH	EDI
    80 0000006C 56                                      PUSH	ESI
    81 0000006D 55                                      PUSH	EBP
    82 0000006E 53                                      PUSH	EBX
    83 0000006F BA 00000007                             MOV	EDX,7
    84 00000074 8B 5C 24 14                             MOV	EBX,[ESP+20]	; win
    85 00000078 8B 44 24 18                             MOV	EAX,[ESP+24]	; x0
    86 0000007C 8B 4C 24 1C                             MOV	ECX,[ESP+28]	; y0
    87 00000080 8B 74 24 20                             MOV	ESI,[ESP+32]	; x1
    88 00000084 8B 7C 24 24                             MOV	EDI,[ESP+36]	; y1
    89 00000088 8B 6C 24 28                             MOV	EBP,[ESP+40]	; col
    90 0000008C CD 40                                   INT	0x40
    91 0000008E 5B                                      POP	EBX
    92 0000008F 5D                                      POP	EBP
    93 00000090 5E                                      POP	ESI
    94 00000091 5F                                      POP	EDI
    95 00000092 C3                                      RET 
    96 00000093                                 
    97 00000093                                 _api_initmalloc:
    98 00000093 53                                      PUSH    EBX
    99 00000094 BA 00000008                             MOV     EDX,8
   100 00000099 2E 8B 1D 00000020                       MOV     EBX,[CS:0x0020]         ;malloc内存空间地址
   101 000000A0 89 D8                                   MOV     EAX,EBX
   102 000000A2 05 00008000                             ADD     EAX,32*1024             ;空间分配32kb
   103 000000A7 2E 8B 0D 00000000                       MOV     ECX,[CS:0x0000]         ;数据段大小
   104 000000AE 29 C1                                   SUB     ECX,EAX
   105 000000B0 CD 40                                   INT     0x40
   106 000000B2 5B                                      POP     EBX
   107 000000B3 C3                                      RET
   108 000000B4                                 
   109 000000B4                                 _api_malloc:    ;char *api_malloc(int size)
   110 000000B4 53                                      PUSh    EBX
   111 000000B5 BA 00000009                             MOV     EDX,9
   112 000000BA 2E 8B 1D 00000020                       MOV     EBX,[CS:0x0020]
   113 000000C1 8B 4C 24 08                             MOV     ECX,[ESP+8]
   114 000000C5 CD 40                                   INT     0x40
   115 000000C7 5B                                      POP     EBX
   116 000000C8 C3                                      RET
   117 000000C9                                 
   118 000000C9                                 _api_free:      ;void api_free(char*addr,int size)
   119 000000C9 53                                      PUSh    EBX
   120 000000CA BA 0000000A                             MOV     EDX,10
   121 000000CF 2E 8B 1D 00000020                       MOV     EBX,[CS:0x0020]
   122 000000D6 8B 44 24 08                             MOV     EAX,[ESP+8]             ;addr
   123 000000DA 8B 4C 24 0C                             MOV     ECX,[ESP+12]            ;size
   124 000000DE CD 40                                   INT     0x40
   125 000000E0 5B                                      POP     EBX
   126 000000E1 C3                                      RET
   127 000000E2                                 
   128 000000E2                                 _api_point:
   129 000000E2 57                                      PUSH    EDI
   130 000000E3 56                                      PUSH    ESI
   131 000000E4 53                                      PUSH    EBX
   132 000000E5 BA 0000000B                             MOV     EDX,11
   133 000000EA 8B 5C 24 10                             MOV     EBX,[ESP+16]    ;win
   134 000000EE 8B 74 24 14                             MOV     ESI,[ESP+20]    ;x
   135 000000F2 8B 7C 24 18                             MOV     EDI,[ESP+24]    ;y
   136 000000F6 8B 44 24 1C                             MOV     EAX,[ESP+28]    ;col
   137 000000FA CD 40                                   INT     0x40
   138 000000FC 5B                                      POP     EBX
   139 000000FD 5E                                      POP     ESI
   140 000000FE 5F                                      POP     EDI
   141 000000FF C3                                      RET
   142 00000100                                 
   143 00000100                                 _api_linewin:           ;void api_lienwin(int win,int x0,int y0,int x1,int y1,int col);
   144 00000100 57                                      PUSH    EDI
   145 00000101 56                                      PUSh    ESI
   146 00000102 55                                      PUSH    EBP
   147 00000103 53                                      PUSH    EBX
   148 00000104 BA 0000000D                             MOV     EDX,13
   149 00000109 8B 5C 24 14                             MOV     EBX,[ESP+20]    ;win    
   150 0000010D 8B 44 24 18                             MOV     EAX,[ESP+24]    ;x0
   151 00000111 8B 4C 24 1C                             MOV     ECX,[ESP+28]    ;y0
   152 00000115 8B 74 24 20                             MOV     ESI,[ESP+32]    ;x1
   153 00000119 8B 7C 24 24                             MOV     EDI,[ESP+36]    ;y1
   154 0000011D 8B 6C 24 28                             MOV     EBP,[ESP+40]    ;col
   155 00000121 CD 40                                   INT     0x40
   156 00000123 5B                                      POP     EBX
   157 00000124 5D                                      POP     EBP
   158 00000125 5E                                      POP     ESI
   159 00000126 5F                                      POP     EDI
   160 00000127 C3                                      RET
   161 00000128                                 
   162 00000128                                 _api_getkey:            ;int api_getkey(int mode)
   163 00000128 BA 0000000F                             MOV     EDX,15
   164 0000012D 8B 44 24 04                             MOV     EAX,[ESP+4]     ;mode
   165 00000131 CD 40                                   INT     0x40
   166 00000133 C3                                      RET
   167 00000134                                 
   168 00000134                                 _api_refreshwin:
   169 00000134 57                                      PUSh    EDI
   170 00000135 56                                      PUSh    ESI
   171 00000136 53                                      PUSh    EBX
   172 00000137 BA 0000000C                             MOV     EDX,12
   173 0000013C 8B 5C 24 10                             MOV     EBX,[ESP+16]    ;win
   174 00000140 8B 44 24 14                             MOV     EAX,[ESP+20]    ;x0
   175 00000144 8B 4C 24 18                             MOV     ECX,[ESP+24]    ;y0
   176 00000148 8B 74 24 1C                             MOV     ESI,[ESP+28]    ;x1
   177 0000014C 8B 7C 24 20                             MOV     EDI,[ESP+32]    ;y1
   178 00000150 CD 40                                   INT     0x40
   179 00000152 5B                                      POP     EBX
   180 00000153 5E                                      POP     ESI
   181 00000154 5F                                      POP     EDI
   182 00000155 C3                                      RET
   183 00000156                                 
   184 00000156                                 _api_closewin:
   185 00000156 53                                      PUSH    EBX
   186 00000157 BA 0000000E                             MOV     EDX,14
   187 0000015C 8B 5C 24 08                             MOV     EBX,[ESP+8]     ;win
   188 00000160 CD 40                                   INT     0x40
   189 00000162 5B                                      POP     EBX
   190 00000163 C3                                      RET
   191 00000164                                 
   192 00000164                                 _api_alloctimer:        ;void api_inittimer(int timer,int data)
   193 00000164 BA 00000010                             MOV     EDX,16
   194 00000169 CD 40                                   INT     0x40
   195 0000016B C3                                      RET
   196 0000016C                                 
   197 0000016C                                 _api_inittimer:         ;void api_settimer(int timer,int data)
   198 0000016C 53                                      PUSH    EBX
   199 0000016D                                         MOV     EDX
      >> [ERROR #002] parameter error.
   200 0000016D 8B 5C 24 08                             MOV     EBX,[ESP+8]     ;timer
   201 00000171 8B 44 24 0C                             MOV     EAX,[ESP+12]    ;data
   202 00000175 CD 40                                   INT     0x40
   203 00000177 5B                                      POP     EBX
   204 00000178 C3                                      RET
   205 00000179                                 
   206 00000179                                 _api_settimer:          ;void api_settimer(int timer,int time)
   207 00000179 53                                      PUSh    EBX
   208 0000017A BA 00000012                             MOV     EDX,18
   209 0000017F 8B 5C 24 08                             MOV     EBX,[ESP+8]     ;timer
   210 00000183 8B 44 24 0C                             MOV     EAX,[ESP+12]    ;time
   211 00000187 CD 40                                   INT     0x40
   212 00000189 C3                                      RET
   213 0000018A                                 
   214 0000018A                                 _api_freetimer:         ;void api_freetimer(int timer);
   215 0000018A 53                                      PUSh    EBX
   216 0000018B BA 00000013                             MOV     EDX,19
   217 00000190 8B 54 24 08                             MOV     EDX,[ESP+8]     ;timer
   218 00000194 CD 40                                   INT     0x40
   219 00000196 5B                                      POP     EBX
   220 00000197 C3                                      RET
