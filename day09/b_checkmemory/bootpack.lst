     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_init_gdtidt
     7 00000000                                 	EXTERN	_init_pic
     8 00000000                                 	EXTERN	_io_sti
     9 00000000                                 	EXTERN	_init_palette
    10 00000000                                 	EXTERN	_init_screen
    11 00000000                                 	EXTERN	_init_mouse_cursor8
    12 00000000                                 	EXTERN	_io_out8
    13 00000000                                 	EXTERN	_keyfifo
    14 00000000                                 	EXTERN	_fifo8_init
    15 00000000                                 	EXTERN	_init_keyboard
    16 00000000                                 	EXTERN	_mousefifo
    17 00000000                                 	EXTERN	_enable_mouse
    18 00000000                                 	EXTERN	_sprintf
    19 00000000                                 	EXTERN	_putfonts8_asc
    20 00000000                                 	EXTERN	_io_cli
    21 00000000                                 	EXTERN	_fifo8_status
    22 00000000                                 	EXTERN	_fifo8_get
    23 00000000                                 	EXTERN	_mouse_decode
    24 00000000                                 	EXTERN	_boxfill8
    25 00000000                                 	EXTERN	_putblock8_8
    26 00000000                                 	EXTERN	_io_stihlt
    27 00000000                                 	EXTERN	_io_load_eflags
    28 00000000                                 	EXTERN	_io_store_eflags
    29 00000000                                 	EXTERN	_load_cr0
    30 00000000                                 	EXTERN	_store_cr0
    31 00000000                                 [FILE "bootpack.c"]
    32                                          [SECTION .data]
    33 00000000                                 LC0:
    34 00000000 6D 65 6D 6F 72 79 20 25 64 4D   	DB	"memory %dMB",0x00
       0000000A 42 00 
    35 0000000C                                 LC2:
    36 0000000C 5B 6C 63 72 20 25 34 64 20 25   	DB	"[lcr %4d %4d]",0x00
       00000016 34 64 5D 00 
    37 0000001A                                 LC3:
    38 0000001A 28 25 33 64 2C 25 33 64 29 00   	DB	"(%3d,%3d)",0x00
    39 00000024                                 LC1:
    40 00000024 25 30 32 78 00                  	DB	"%02x",0x00
    41                                          [SECTION .text]
    42 00000000                                 	GLOBAL	_HariMain
    43 00000000                                 _HariMain:
    44 00000000 55                              	PUSH	EBP
    45 00000001 89 E5                           	MOV	EBP,ESP
    46 00000003 57                              	PUSH	EDI
    47 00000004 56                              	PUSH	ESI
    48 00000005 53                              	PUSH	EBX
    49 00000006 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
    50 00000009 81 EC 000001EC                  	SUB	ESP,492
    51 0000000F 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
    52 00000016 89 85 FFFFFE10                  	MOV	DWORD [-496+EBP],EAX
    53 0000001C 8B 3D 00000FF8                  	MOV	EDI,DWORD [4088]
    54 00000022 0F BF 35 00000FF4               	MOVSX	ESI,WORD [4084]
    55 00000029 C7 85 FFFFFE0C 00000000         	MOV	DWORD [-500+EBP],0
    56 00000033 C7 85 FFFFFE08 00000000         	MOV	DWORD [-504+EBP],0
    57 0000003D E8 [00000000]                   	CALL	_init_gdtidt
    58 00000042 E8 [00000000]                   	CALL	_init_pic
    59 00000047 E8 [00000000]                   	CALL	_io_sti
    60 0000004C E8 [00000000]                   	CALL	_init_palette
    61 00000051 FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
    62 00000057 56                              	PUSH	ESI
    63 00000058 57                              	PUSH	EDI
    64 00000059 E8 [00000000]                   	CALL	_init_screen
    65 0000005E 8D 85 FFFFFEC4                  	LEA	EAX,DWORD [-316+EBP]
    66 00000064 6A 00                           	PUSH	0
    67 00000066 50                              	PUSH	EAX
    68 00000067 E8 [00000000]                   	CALL	_init_mouse_cursor8
    69 0000006C 68 000000F9                     	PUSH	249
    70 00000071 6A 21                           	PUSH	33
    71 00000073 E8 [00000000]                   	CALL	_io_out8
    72 00000078 68 000000EF                     	PUSH	239
    73 0000007D 68 000000A1                     	PUSH	161
    74 00000082 E8 [00000000]                   	CALL	_io_out8
    75 00000087 8D 85 FFFFFEA4                  	LEA	EAX,DWORD [-348+EBP]
    76 0000008D 83 C4 24                        	ADD	ESP,36
    77 00000090 50                              	PUSH	EAX
    78 00000091 6A 20                           	PUSH	32
    79 00000093 68 [00000000]                   	PUSH	_keyfifo
    80 00000098 E8 [00000000]                   	CALL	_fifo8_init
    81 0000009D E8 [00000000]                   	CALL	_init_keyboard
    82 000000A2 8D 85 FFFFFE24                  	LEA	EAX,DWORD [-476+EBP]
    83 000000A8 50                              	PUSH	EAX
    84 000000A9 68 00000080                     	PUSH	128
    85 000000AE 68 [00000000]                   	PUSH	_mousefifo
    86 000000B3 E8 [00000000]                   	CALL	_fifo8_init
    87 000000B8 8D 85 FFFFFE14                  	LEA	EAX,DWORD [-492+EBP]
    88 000000BE 50                              	PUSH	EAX
    89 000000BF E8 [00000000]                   	CALL	_enable_mouse
    90 000000C4 68 BFFFFFFF                     	PUSH	-1073741825
    91 000000C9 68 00400000                     	PUSH	4194304
    92 000000CE E8 00000251                     	CALL	_memtest
    93 000000D3 83 C4 24                        	ADD	ESP,36
    94 000000D6 C1 E8 14                        	SHR	EAX,20
    95 000000D9 50                              	PUSH	EAX
    96 000000DA 68 [00000000]                   	PUSH	LC0
    97 000000DF 53                              	PUSH	EBX
    98 000000E0 E8 [00000000]                   	CALL	_sprintf
    99 000000E5 53                              	PUSH	EBX
   100 000000E6 6A 20                           	PUSH	32
   101 000000E8 6A 00                           	PUSH	0
   102 000000EA 6A 07                           	PUSH	7
   103 000000EC 56                              	PUSH	ESI
   104 000000ED 57                              	PUSH	EDI
   105 000000EE E8 [00000000]                   	CALL	_putfonts8_asc
   106 000000F3 83 C4 24                        	ADD	ESP,36
   107 000000F6                                 L2:
   108 000000F6 E8 [00000000]                   	CALL	_io_cli
   109 000000FB 68 [00000000]                   	PUSH	_keyfifo
   110 00000100 E8 [00000000]                   	CALL	_fifo8_status
   111 00000105 68 [00000000]                   	PUSH	_mousefifo
   112 0000010A 89 C3                           	MOV	EBX,EAX
   113 0000010C E8 [00000000]                   	CALL	_fifo8_status
   114 00000111 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
   115 00000114 5B                              	POP	EBX
   116 00000115 5A                              	POP	EDX
   117 00000116 85 C0                           	TEST	EAX,EAX
   118 00000118 0F 84 000001FC                  	JE	L18
   119 0000011E 68 [00000000]                   	PUSH	_keyfifo
   120 00000123 E8 [00000000]                   	CALL	_fifo8_status
   121 00000128 59                              	POP	ECX
   122 00000129 85 C0                           	TEST	EAX,EAX
   123 0000012B 0F 85 0000019C                  	JNE	L19
   124 00000131 68 [00000000]                   	PUSH	_mousefifo
   125 00000136 E8 [00000000]                   	CALL	_fifo8_status
   126 0000013B 5A                              	POP	EDX
   127 0000013C 85 C0                           	TEST	EAX,EAX
   128 0000013E 74 B6                           	JE	L2
   129 00000140 68 [00000000]                   	PUSH	_mousefifo
   130 00000145 E8 [00000000]                   	CALL	_fifo8_get
   131 0000014A 88 C3                           	MOV	BL,AL
   132 0000014C E8 [00000000]                   	CALL	_io_sti
   133 00000151 0F B6 C3                        	MOVZX	EAX,BL
   134 00000154 50                              	PUSH	EAX
   135 00000155 8D 85 FFFFFE14                  	LEA	EAX,DWORD [-492+EBP]
   136 0000015B 50                              	PUSH	EAX
   137 0000015C E8 [00000000]                   	CALL	_mouse_decode
   138 00000161 83 C4 0C                        	ADD	ESP,12
   139 00000164 85 C0                           	TEST	EAX,EAX
   140 00000166 74 8E                           	JE	L2
   141 00000168 FF B5 FFFFFE1C                  	PUSH	DWORD [-484+EBP]
   142 0000016E FF B5 FFFFFE18                  	PUSH	DWORD [-488+EBP]
   143 00000174 68 [0000000C]                   	PUSH	LC2
   144 00000179 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   145 0000017C 53                              	PUSH	EBX
   146 0000017D E8 [00000000]                   	CALL	_sprintf
   147 00000182 83 C4 10                        	ADD	ESP,16
   148 00000185 8B 85 FFFFFE20                  	MOV	EAX,DWORD [-480+EBP]
   149 0000018B A9 00000001                     	TEST	EAX,1
   150 00000190 74 04                           	JE	L11
   151 00000192 C6 45 C5 4C                     	MOV	BYTE [-59+EBP],76
   152 00000196                                 L11:
   153 00000196 A9 00000002                     	TEST	EAX,2
   154 0000019B 74 04                           	JE	L12
   155 0000019D C6 45 C7 52                     	MOV	BYTE [-57+EBP],82
   156 000001A1                                 L12:
   157 000001A1 83 E0 04                        	AND	EAX,4
   158 000001A4 74 04                           	JE	L13
   159 000001A6 C6 45 C6 43                     	MOV	BYTE [-58+EBP],67
   160 000001AA                                 L13:
   161 000001AA 6A 1F                           	PUSH	31
   162 000001AC 68 00000097                     	PUSH	151
   163 000001B1 6A 10                           	PUSH	16
   164 000001B3 6A 20                           	PUSH	32
   165 000001B5 6A 0E                           	PUSH	14
   166 000001B7 56                              	PUSH	ESI
   167 000001B8 57                              	PUSH	EDI
   168 000001B9 E8 [00000000]                   	CALL	_boxfill8
   169 000001BE 53                              	PUSH	EBX
   170 000001BF 6A 10                           	PUSH	16
   171 000001C1 6A 20                           	PUSH	32
   172 000001C3 6A 07                           	PUSH	7
   173 000001C5 56                              	PUSH	ESI
   174 000001C6 57                              	PUSH	EDI
   175 000001C7 E8 [00000000]                   	CALL	_putfonts8_asc
   176 000001CC 8B 85 FFFFFE08                  	MOV	EAX,DWORD [-504+EBP]
   177 000001D2 83 C4 34                        	ADD	ESP,52
   178 000001D5 83 C0 0F                        	ADD	EAX,15
   179 000001D8 50                              	PUSH	EAX
   180 000001D9 8B 85 FFFFFE0C                  	MOV	EAX,DWORD [-500+EBP]
   181 000001DF 83 C0 0F                        	ADD	EAX,15
   182 000001E2 50                              	PUSH	EAX
   183 000001E3 FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   184 000001E9 FF B5 FFFFFE0C                  	PUSH	DWORD [-500+EBP]
   185 000001EF 6A 0E                           	PUSH	14
   186 000001F1 56                              	PUSH	ESI
   187 000001F2 57                              	PUSH	EDI
   188 000001F3 E8 [00000000]                   	CALL	_boxfill8
   189 000001F8 83 C4 1C                        	ADD	ESP,28
   190 000001FB 8B 85 FFFFFE1C                  	MOV	EAX,DWORD [-484+EBP]
   191 00000201 01 85 FFFFFE08                  	ADD	DWORD [-504+EBP],EAX
   192 00000207 8B 85 FFFFFE18                  	MOV	EAX,DWORD [-488+EBP]
   193 0000020D 01 85 FFFFFE0C                  	ADD	DWORD [-500+EBP],EAX
   194 00000213 0F 88 000000A5                  	JS	L20
   195 00000219                                 L14:
   196 00000219 83 BD FFFFFE08 00               	CMP	DWORD [-504+EBP],0
   197 00000220 0F 88 00000089                  	JS	L21
   198 00000226                                 L15:
   199 00000226 8D 46 F0                        	LEA	EAX,DWORD [-16+ESI]
   200 00000229 39 85 FFFFFE0C                  	CMP	DWORD [-500+EBP],EAX
   201 0000022F 7E 06                           	JLE	L16
   202 00000231 89 85 FFFFFE0C                  	MOV	DWORD [-500+EBP],EAX
   203 00000237                                 L16:
   204 00000237 8B 85 FFFFFE10                  	MOV	EAX,DWORD [-496+EBP]
   205 0000023D 83 E8 10                        	SUB	EAX,16
   206 00000240 39 85 FFFFFE08                  	CMP	DWORD [-504+EBP],EAX
   207 00000246 7E 06                           	JLE	L17
   208 00000248 89 85 FFFFFE08                  	MOV	DWORD [-504+EBP],EAX
   209 0000024E                                 L17:
   210 0000024E FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   211 00000254 FF B5 FFFFFE0C                  	PUSH	DWORD [-500+EBP]
   212 0000025A 68 [0000001A]                   	PUSH	LC3
   213 0000025F 53                              	PUSH	EBX
   214 00000260 E8 [00000000]                   	CALL	_sprintf
   215 00000265 6A 0F                           	PUSH	15
   216 00000267 6A 4F                           	PUSH	79
   217 00000269 6A 00                           	PUSH	0
   218 0000026B 6A 00                           	PUSH	0
   219 0000026D 6A 0E                           	PUSH	14
   220 0000026F 56                              	PUSH	ESI
   221 00000270 57                              	PUSH	EDI
   222 00000271 E8 [00000000]                   	CALL	_boxfill8
   223 00000276 83 C4 2C                        	ADD	ESP,44
   224 00000279 53                              	PUSH	EBX
   225 0000027A 6A 00                           	PUSH	0
   226 0000027C 6A 00                           	PUSH	0
   227 0000027E 6A 07                           	PUSH	7
   228 00000280 56                              	PUSH	ESI
   229 00000281 57                              	PUSH	EDI
   230 00000282 E8 [00000000]                   	CALL	_putfonts8_asc
   231 00000287 8D 85 FFFFFEC4                  	LEA	EAX,DWORD [-316+EBP]
   232 0000028D 6A 10                           	PUSH	16
   233 0000028F 50                              	PUSH	EAX
   234 00000290 FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   235 00000296 FF B5 FFFFFE0C                  	PUSH	DWORD [-500+EBP]
   236 0000029C 6A 10                           	PUSH	16
   237 0000029E 6A 10                           	PUSH	16
   238 000002A0 56                              	PUSH	ESI
   239 000002A1 57                              	PUSH	EDI
   240 000002A2 E8 [00000000]                   	CALL	_putblock8_8
   241 000002A7 83 C4 38                        	ADD	ESP,56
   242 000002AA E9 FFFFFE47                     	JMP	L2
   243 000002AF                                 L21:
   244 000002AF C7 85 FFFFFE08 00000000         	MOV	DWORD [-504+EBP],0
   245 000002B9 E9 FFFFFF68                     	JMP	L15
   246 000002BE                                 L20:
   247 000002BE C7 85 FFFFFE0C 00000000         	MOV	DWORD [-500+EBP],0
   248 000002C8 E9 FFFFFF4C                     	JMP	L14
   249 000002CD                                 L19:
   250 000002CD 68 [00000000]                   	PUSH	_keyfifo
   251 000002D2 E8 [00000000]                   	CALL	_fifo8_get
   252 000002D7 88 C3                           	MOV	BL,AL
   253 000002D9 E8 [00000000]                   	CALL	_io_sti
   254 000002DE 0F B6 C3                        	MOVZX	EAX,BL
   255 000002E1 50                              	PUSH	EAX
   256 000002E2 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   257 000002E5 68 [00000024]                   	PUSH	LC1
   258 000002EA 53                              	PUSH	EBX
   259 000002EB E8 [00000000]                   	CALL	_sprintf
   260 000002F0 6A 1F                           	PUSH	31
   261 000002F2 6A 0F                           	PUSH	15
   262 000002F4 6A 10                           	PUSH	16
   263 000002F6 6A 00                           	PUSH	0
   264 000002F8 6A 0E                           	PUSH	14
   265 000002FA 56                              	PUSH	ESI
   266 000002FB 57                              	PUSH	EDI
   267 000002FC E8 [00000000]                   	CALL	_boxfill8
   268 00000301 83 C4 2C                        	ADD	ESP,44
   269 00000304 53                              	PUSH	EBX
   270 00000305 6A 10                           	PUSH	16
   271 00000307 6A 00                           	PUSH	0
   272 00000309 6A 07                           	PUSH	7
   273 0000030B 56                              	PUSH	ESI
   274 0000030C 57                              	PUSH	EDI
   275 0000030D E8 [00000000]                   	CALL	_putfonts8_asc
   276 00000312 83 C4 18                        	ADD	ESP,24
   277 00000315 E9 FFFFFDDC                     	JMP	L2
   278 0000031A                                 L18:
   279 0000031A E8 [00000000]                   	CALL	_io_stihlt
   280 0000031F E9 FFFFFDD2                     	JMP	L2
   281 00000324                                 	GLOBAL	_memtest
   282 00000324                                 _memtest:
   283 00000324 55                              	PUSH	EBP
   284 00000325 89 E5                           	MOV	EBP,ESP
   285 00000327 53                              	PUSH	EBX
   286 00000328 31 DB                           	XOR	EBX,EBX
   287 0000032A E8 [00000000]                   	CALL	_io_load_eflags
   288 0000032F 0D 00040000                     	OR	EAX,262144
   289 00000334 50                              	PUSH	EAX
   290 00000335 E8 [00000000]                   	CALL	_io_store_eflags
   291 0000033A E8 [00000000]                   	CALL	_io_load_eflags
   292 0000033F 5A                              	POP	EDX
   293 00000340 A9 00040000                     	TEST	EAX,262144
   294 00000345 74 02                           	JE	L23
   295 00000347 B3 01                           	MOV	BL,1
   296 00000349                                 L23:
   297 00000349 25 FFFBFFFF                     	AND	EAX,-262145
   298 0000034E 50                              	PUSH	EAX
   299 0000034F E8 [00000000]                   	CALL	_io_store_eflags
   300 00000354 84 DB                           	TEST	BL,BL
   301 00000356 58                              	POP	EAX
   302 00000357 74 2E                           	JE	L26
   303 00000359                                 L24:
   304 00000359 FF 75 0C                        	PUSH	DWORD [12+EBP]
   305 0000035C FF 75 08                        	PUSH	DWORD [8+EBP]
   306 0000035F E8 00000036                     	CALL	_memtest_sub
   307 00000364 84 DB                           	TEST	BL,BL
   308 00000366 58                              	POP	EAX
   309 00000367 5A                              	POP	EDX
   310 00000368 75 0A                           	JNE	L27
   311 0000036A                                 L25:
   312 0000036A B8 00000001                     	MOV	EAX,1
   313 0000036F 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
   314 00000372 C9                              	LEAVE
   315 00000373 C3                              	RET
   316 00000374                                 L27:
   317 00000374 E8 [00000000]                   	CALL	_load_cr0
   318 00000379 25 9FFFFFFF                     	AND	EAX,-1610612737
   319 0000037E 50                              	PUSH	EAX
   320 0000037F E8 [00000000]                   	CALL	_store_cr0
   321 00000384 59                              	POP	ECX
   322 00000385 EB E3                           	JMP	L25
   323 00000387                                 L26:
   324 00000387 E8 [00000000]                   	CALL	_load_cr0
   325 0000038C 0D 60000000                     	OR	EAX,1610612736
   326 00000391 50                              	PUSH	EAX
   327 00000392 E8 [00000000]                   	CALL	_store_cr0
   328 00000397 59                              	POP	ECX
   329 00000398 EB BF                           	JMP	L24
   330 0000039A                                 	GLOBAL	_memtest_sub
   331 0000039A                                 _memtest_sub:
   332 0000039A 55                              	PUSH	EBP
   333 0000039B 89 E5                           	MOV	EBP,ESP
   334 0000039D 8B 55 0C                        	MOV	EDX,DWORD [12+EBP]
   335 000003A0 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   336 000003A3 39 D0                           	CMP	EAX,EDX
   337 000003A5 73 09                           	JAE	L30
   338 000003A7                                 L36:
   339 000003A7                                 L34:
   340 000003A7 05 00001000                     	ADD	EAX,4096
   341 000003AC 39 D0                           	CMP	EAX,EDX
   342 000003AE 72 F7                           	JB	L36
   343 000003B0                                 L30:
   344 000003B0 5D                              	POP	EBP
   345 000003B1 C3                              	RET
